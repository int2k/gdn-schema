openapi: 3.0.0
tags:
  - name: product-class
    description: Product Class API
  - name: product-option
    description: Product Option API
  - name: product
    description: Product API
  - name: category
    description: Category API
  - name: vendor
    description: Vendor API
info:
  title: Nusantara Catalog API
  version: 2.0.0
  description: Catalog API
  contact:
    name: Gramedia Digital Nusantara
  license:
    name: propietary
servers:
  - url: 'http://localhost:3000/api/catalog'
paths:
  '/category/{slug}/':
    get:
      summary: Category detail
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
      operationId: get-category
      parameters: []
      description: |
        Category Detail
      tags:
        - category
    parameters:
      - schema:
          type: string
        name: slug
        in: path
        required: true
    patch:
      operationId: patch-category
      description: Update category
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
      tags:
        - category
      security:
        - JWT Token: []
      summary: Update Category
    delete:
      summary: Delete Category
      operationId: delete-category-slug
      responses:
        '204':
          description: No Content
      description: Delete Category
      tags:
        - category
  /category/:
    get:
      summary: Categories list
      tags:
        - category
      responses:
        '200':
          description: OK
          headers:
            X-Page:
              description: A link to the next page of responses
              schema:
                type: integer
            X-Per-Page:
              description: Maximum number of results per page.
              schema:
                type: integer
            X-Total-Results:
              description: The total number of results across all pages.
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
      operationId: get-category-list
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: per_page
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - name: q
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: path_name__icontains
          required: false
          in: query
          description: path_name__icontains
          schema:
            type: string
        - name: depth__lte
          required: false
          in: query
          description: depth__lte
          schema:
            type: string
        - name: depth
          required: false
          in: query
          description: depth
          schema:
            type: string
        - schema:
            type: string
          in: query
          name: include_deleted
          description: Show soft deleted
      description: Category Listing
    post:
      summary: Create Category
      operationId: post-category
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties: {}
            application/xml:
              schema:
                type: object
                properties: {}
          headers:
            Location:
              schema:
                type: string
                format: uri
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      description: Create new Category
      tags:
        - category
      security:
        - JWT Token: []
  /vendor/:
    get:
      summary: Vendor Detail
      tags:
        - vendor
      responses:
        '200':
          description: OK
          headers:
            X-Page:
              description: A link to the next page of responses
              schema:
                type: integer
            X-Per-Page:
              description: Maximum number of results per page.
              schema:
                type: integer
            X-Total-Results:
              description: The total number of results across all pages.
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vendor'
      operationId: get-vendor
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: per_page
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - name: q
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      description: Get List of Vendor
    post:
      summary: Create Vendor
      operationId: post-vendor
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
      description: |
        Create new Vendor
      security:
        - JWT Token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vendor'
      tags:
        - vendor
  '/vendor/{slug}/':
    parameters:
      - schema:
          type: string
        name: slug
        in: path
        required: true
    get:
      summary: Vendor Detail
      tags:
        - Vendor
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
      operationId: get-vendor-slug
      description: Detail of vendor
    delete:
      summary: Delete Vendor
      operationId: delete-vendor-slug
      responses:
        '204':
          description: No Content
      security:
        - JWT Token: []
      description: Delete Vendor
      tags:
        - vendor
    patch:
      summary: Update Vendor
      operationId: patch-vendor-slug
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
      description: Update Vendor
      security:
        - JWT Token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vendor'
      tags:
        - vendor
  /product-option/:
    get:
      summary: List Product Option
      tags:
        - product-option
      responses:
        '200':
          description: OK
          headers:
            X-Page:
              description: A link to the next page of responses
              schema:
                type: integer
            X-Per-Page:
              description: Maximum number of results per page.
              schema:
                type: integer
            X-Total-Results:
              description: The total number of results across all pages.
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductOption'
      operationId: get-product-option
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: per_page
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - name: q
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      description: List product option
    post:
      summary: Create Product Option
      operationId: post-product-option
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
      security:
        - JWT Token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductOption'
        description: ''
      description: Create Product Option
      tags:
        - product-option
  '/product-option/{slug}/':
    parameters:
      - schema:
          type: string
        name: slug
        in: path
        required: true
    get:
      summary: Product option detail
      tags:
        - product-option
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductOption'
      operationId: get-product-option-slug
      description: Get product option detail
    patch:
      summary: Update Product Option
      operationId: patch-product-option-slug
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductOption'
      security:
        - JWT Token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductOption'
      tags:
        - product-option
      description: Update product option
    delete:
      summary: Delete Product Option
      operationId: delete-product-option-slug
      responses:
        '204':
          description: No Content
      description: Delete Product Option
      security:
        - JWT Token: []
      tags:
        - product-option
  /product-class/:
    get:
      summary: List Product Class
      tags:
        - product-class
      responses:
        '200':
          description: OK
          headers:
            X-Page:
              description: A link to the next page of responses
              schema:
                type: integer
            X-Per-Page:
              description: Maximum number of results per page.
              schema:
                type: integer
            X-Total-Results:
              description: The total number of results across all pages.
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductClass'
      operationId: get-product-class
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: per_page
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - name: q
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      description: List product class
    post:
      summary: Create Product Class
      operationId: post-product-class
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
      security:
        - JWT Token: []
      description: Create a new Product Class
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClass'
      tags:
        - product-class
  '/product-class/{slug}/':
    parameters:
      - schema:
          type: string
        name: slug
        in: path
        required: true
    get:
      summary: Product Class Detail
      tags:
        - product-class
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductClass'
      operationId: get-product-class-slug
      description: |
        GET the detail of product class
    patch:
      summary: Update Product Class
      operationId: patch-product-class-slug
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductClass'
      description: Update product class data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClass'
      security:
        - JWT Token: []
      tags:
        - product-class
    delete:
      summary: Delete Product Class
      operationId: delete-product-class-slug
      responses:
        '204':
          description: No Content
      description: Delete product class
      security:
        - JWT Token: []
      tags:
        - product-class
  /product-search/:
    get:
      summary: Search Product
      tags:
        - product
      responses:
        '200':
          description: OK
          headers:
            X-Page:
              description: A link to the next page of responses
              schema:
                type: integer
            X-Per-Page:
              description: Maximum number of results per page.
              schema:
                type: integer
            X-Total-Results:
              description: The total number of results across all pages.
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    href:
                      type: string
      operationId: get-product-search
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: per_page
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - name: q
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      description: Search product
components:
  schemas:
    Category:
      type: object
      description: ''
      properties:
        name:
          type: string
          maxLength: 120
        path_name:
          type: string
          maxLength: 255
        product_count:
          type: string
          readOnly: true
        depth:
          type: integer
          maximum: 32767
          minimum: 0
        source_mappings:
          type: array
          items:
            type: string
        href:
          type: string
          format: uri
          readOnly: true
        image:
          type: string
          format: binary
        parent:
          type: string
          nullable: true
          description: The first direct ancestor of this category
        is_active:
          type: boolean
        slug:
          type: string
          readOnly: true
      required:
        - name
    Vendor:
      title: Vendor
      type: object
      properties:
        name:
          type: string
        href:
          type: string
        description:
          type: string
        iconImage:
          type: string
          format: binary
        internalNotes:
          type: string
        bannerImage:
          type: string
          format: binary
        extra:
          type: object
          properties:
            seoDescription:
              type: string
            seoKeywords:
              type: string
        productCount:
          type: integer
    ProductOption:
      title: ProductOption
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        href:
          type: string
        type:
          type: string
        minimumLength:
          type: string
        maximumLength:
          type: string
        isActive:
          type: string
        webhookCheckDomain:
          type: string
        webhookPostCheckout:
          type: string
      description: ''
    ProductAttribute:
      title: ProductAttribute
      type: object
      properties:
        name:
          type: string
        href:
          type: string
          format: uri
        type:
          type: string
          enum:
            - text
            - markdown
            - integer
            - decimal
            - color
            - image
            - boolean
        productClasses:
          type: array
          items:
            type: string
        minValue:
          type: number
        maxValue:
          type: number
        isSearchable:
          type: boolean
        isFilterable:
          type: boolean
      description: ''
    ProductClass:
      title: ProductClass
      type: object
      properties:
        name:
          type: string
        href:
          type: string
        requiresShipping:
          type: boolean
        trackStock:
          type: boolean
        isPerishable:
          type: boolean
        type:
          type: string
        productCount:
          type: number
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
        option:
          $ref: '#/components/schemas/ProductOption'
      required:
        - name
    Product:
      title: Product
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        href:
          type: string
      description: Product
  securitySchemes:
    JWT Token:
      type: http
      scheme: bearer
security:
  - JWT Token: []
